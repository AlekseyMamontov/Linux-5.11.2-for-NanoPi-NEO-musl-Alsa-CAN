NanoPI NEO
http://wiki.friendlyarm.com/wiki/index.php/NanoPi_NEO

embedded Linux 5.11.2 _ musl native  image 1Gb 
https://drive.google.com/file/d/1rkPBEJO3HvRNGV7Uk8CtFkjeCn8e_nNz/view?usp=sharing
Support Can-module MCP2515 (can-utils), Alsa ,i2c .....  

make sure you write to the card and not the hard drive ... !!
The letter instead of the X is very important

sudo dd if=sdcard.img of=/dev/sdX bs=1M ; sync;
sdX (sd_card)

----------------------
ssh root@192.168.0.46

login     : root
password  : admin

user login  : plk
password    : admin

source for static cross- and native- musl-based toolchains
https://musl.cc/
https://drive.google.com/file/d/1Av_5EBzpeLgX2UtKNu4NpnpGGmjpQy1R/view?usp=sharing

https://musl.libc.org/
https://www.musl-libc.org/faq.html

gcc -v

Using built-in specs.
COLLECT_GCC=gcc
COLLECT_LTO_WRAPPER=/usr/armv7l-linux-musleabihf-native/bin/../libexec/gcc/armv7l-linux-musleabihf/10.2.1/lto-wrapper
Target: armv7l-linux-musleabihf
Configured with: ../src_gcc/configure
--enable-languages=c,c++,fortran 
--with-float=hard CC='armv7l-linux-musleabihf-gcc -static 
--static' CXX='armv7l-linux-musleabihf-g++ -static 
--static' FC='armv7l-linux-musleabihf-gfortran -static
--static' CFLAGS='-g0 -O2 -fno-align-functions -fno-align-jumps -fno-align-loops -fno-align-labels' CXXFLAGS='-g0 -O2 -fno-align-functions -fno-align-jumps -fno-align-loops -fno-align-labels' FFLAGS='-g0 -O2 -fno-align-functions -fno-align-jumps -fno-align-loops -fno-align-labels' LDFLAGS='-s -static 
--static' 
--disable-bootstrap
--disable-assembly
--disable-werror 
--target=armv7l-linux-musleabihf 
--prefix= --libdir=/lib 
--disable-multilib 
--with-sysroot=/ 
--enable-tls 
--disable-libmudflap 
--disable-libsanitizer 
--disable-gnu-indirect-function 
--disable-libmpx 
--enable-libstdcxx-time=rt 
--enable-deterministic-archives 
--enable-libstdcxx-time 
--enable-libquadmath 
--enable-libquadmath-support 
--disable-decimal-float 
--build=x86_64-pc-linux-gnu 
--host=armv7l-linux-musleabihf 'CC_FOR_BUILD=cc -static 
--static' 'CXX_FOR_BUILD=g++ -static --static'
Thread model: posix
Supported LTO compression algorithms: zlib
gcc version 10.2.1 20210116 (GCC) 

